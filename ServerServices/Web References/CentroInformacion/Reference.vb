'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18034
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18034.
'
Namespace CentroInformacion
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CentroInformacionSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CentroInformacion
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RegistrarVentaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistrarCreditosVentaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistrarLecturaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReversarVentaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistrarPagoExtraordinarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutorizacionIdentificadorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.POSstation.ServerServices.My.MySettings.Default.ServerServices_CentroInformacion_CentroInformacion
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RegistrarVentaCompleted As RegistrarVentaCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistrarCreditosVentaCompleted As RegistrarCreditosVentaCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistrarLecturaCompleted As RegistrarLecturaCompletedEventHandler
        
        '''<remarks/>
        Public Event ReversarVentaCompleted As ReversarVentaCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistrarPagoExtraordinarioCompleted As RegistrarPagoExtraordinarioCompletedEventHandler
        
        '''<remarks/>
        Public Event AutorizacionIdentificadorCompleted As AutorizacionIdentificadorCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistrarVenta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistrarVenta( _
                    ByVal idFormaPago As Short,  _
                    ByVal idProducto As Short,  _
                    ByVal placa As String,  _
                    ByVal idCliente As String,  _
                    ByVal codEstacion As String,  _
                    ByVal consecutivo As Long,  _
                    ByVal fechaHora As String,  _
                    ByVal idTurno As Integer,  _
                    ByVal horaInicial As String,  _
                    ByVal horaFinal As String,  _
                    ByVal lecturaInicial As String,  _
                    ByVal lecturaFinal As String,  _
                    ByVal total As String,  _
                    ByVal abonosCreditos As String,  _
                    ByVal cantidad As String,  _
                    ByVal precio As String,  _
                    ByVal idIsla As Short,  _
                    ByVal idManguera As Short,  _
                    ByVal Descuento As String,  _
                    ByVal iva As String,  _
                    ByVal IdROM As String) As String
            Dim results() As Object = Me.Invoke("RegistrarVenta", New Object() {idFormaPago, idProducto, placa, idCliente, codEstacion, consecutivo, fechaHora, idTurno, horaInicial, horaFinal, lecturaInicial, lecturaFinal, total, abonosCreditos, cantidad, precio, idIsla, idManguera, Descuento, iva, IdROM})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistrarVentaAsync( _
                    ByVal idFormaPago As Short,  _
                    ByVal idProducto As Short,  _
                    ByVal placa As String,  _
                    ByVal idCliente As String,  _
                    ByVal codEstacion As String,  _
                    ByVal consecutivo As Long,  _
                    ByVal fechaHora As String,  _
                    ByVal idTurno As Integer,  _
                    ByVal horaInicial As String,  _
                    ByVal horaFinal As String,  _
                    ByVal lecturaInicial As String,  _
                    ByVal lecturaFinal As String,  _
                    ByVal total As String,  _
                    ByVal abonosCreditos As String,  _
                    ByVal cantidad As String,  _
                    ByVal precio As String,  _
                    ByVal idIsla As Short,  _
                    ByVal idManguera As Short,  _
                    ByVal Descuento As String,  _
                    ByVal iva As String,  _
                    ByVal IdROM As String)
            Me.RegistrarVentaAsync(idFormaPago, idProducto, placa, idCliente, codEstacion, consecutivo, fechaHora, idTurno, horaInicial, horaFinal, lecturaInicial, lecturaFinal, total, abonosCreditos, cantidad, precio, idIsla, idManguera, Descuento, iva, IdROM, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistrarVentaAsync( _
                    ByVal idFormaPago As Short,  _
                    ByVal idProducto As Short,  _
                    ByVal placa As String,  _
                    ByVal idCliente As String,  _
                    ByVal codEstacion As String,  _
                    ByVal consecutivo As Long,  _
                    ByVal fechaHora As String,  _
                    ByVal idTurno As Integer,  _
                    ByVal horaInicial As String,  _
                    ByVal horaFinal As String,  _
                    ByVal lecturaInicial As String,  _
                    ByVal lecturaFinal As String,  _
                    ByVal total As String,  _
                    ByVal abonosCreditos As String,  _
                    ByVal cantidad As String,  _
                    ByVal precio As String,  _
                    ByVal idIsla As Short,  _
                    ByVal idManguera As Short,  _
                    ByVal Descuento As String,  _
                    ByVal iva As String,  _
                    ByVal IdROM As String,  _
                    ByVal userState As Object)
            If (Me.RegistrarVentaOperationCompleted Is Nothing) Then
                Me.RegistrarVentaOperationCompleted = AddressOf Me.OnRegistrarVentaOperationCompleted
            End If
            Me.InvokeAsync("RegistrarVenta", New Object() {idFormaPago, idProducto, placa, idCliente, codEstacion, consecutivo, fechaHora, idTurno, horaInicial, horaFinal, lecturaInicial, lecturaFinal, total, abonosCreditos, cantidad, precio, idIsla, idManguera, Descuento, iva, IdROM}, Me.RegistrarVentaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistrarVentaOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistrarVentaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistrarVentaCompleted(Me, New RegistrarVentaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistrarCreditosVenta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistrarCreditosVenta(ByVal recaudosCredito() As CreditosVenta) As String
            Dim results() As Object = Me.Invoke("RegistrarCreditosVenta", New Object() {recaudosCredito})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistrarCreditosVentaAsync(ByVal recaudosCredito() As CreditosVenta)
            Me.RegistrarCreditosVentaAsync(recaudosCredito, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistrarCreditosVentaAsync(ByVal recaudosCredito() As CreditosVenta, ByVal userState As Object)
            If (Me.RegistrarCreditosVentaOperationCompleted Is Nothing) Then
                Me.RegistrarCreditosVentaOperationCompleted = AddressOf Me.OnRegistrarCreditosVentaOperationCompleted
            End If
            Me.InvokeAsync("RegistrarCreditosVenta", New Object() {recaudosCredito}, Me.RegistrarCreditosVentaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistrarCreditosVentaOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistrarCreditosVentaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistrarCreditosVentaCompleted(Me, New RegistrarCreditosVentaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistrarLectura", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistrarLectura(ByVal codEstacion As String, ByVal Fecha As String, ByVal idTurno As Integer, ByVal idManguera As Short, ByVal lecturaInicial As String, ByVal lecturaFinal As String, ByVal mecanicaInicial As String, ByVal mecanicaFinal As String, ByVal precio As String) As String
            Dim results() As Object = Me.Invoke("RegistrarLectura", New Object() {codEstacion, Fecha, idTurno, idManguera, lecturaInicial, lecturaFinal, mecanicaInicial, mecanicaFinal, precio})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistrarLecturaAsync(ByVal codEstacion As String, ByVal Fecha As String, ByVal idTurno As Integer, ByVal idManguera As Short, ByVal lecturaInicial As String, ByVal lecturaFinal As String, ByVal mecanicaInicial As String, ByVal mecanicaFinal As String, ByVal precio As String)
            Me.RegistrarLecturaAsync(codEstacion, Fecha, idTurno, idManguera, lecturaInicial, lecturaFinal, mecanicaInicial, mecanicaFinal, precio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistrarLecturaAsync(ByVal codEstacion As String, ByVal Fecha As String, ByVal idTurno As Integer, ByVal idManguera As Short, ByVal lecturaInicial As String, ByVal lecturaFinal As String, ByVal mecanicaInicial As String, ByVal mecanicaFinal As String, ByVal precio As String, ByVal userState As Object)
            If (Me.RegistrarLecturaOperationCompleted Is Nothing) Then
                Me.RegistrarLecturaOperationCompleted = AddressOf Me.OnRegistrarLecturaOperationCompleted
            End If
            Me.InvokeAsync("RegistrarLectura", New Object() {codEstacion, Fecha, idTurno, idManguera, lecturaInicial, lecturaFinal, mecanicaInicial, mecanicaFinal, precio}, Me.RegistrarLecturaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistrarLecturaOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistrarLecturaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistrarLecturaCompleted(Me, New RegistrarLecturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReversarVenta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReversarVenta(ByVal codestacion As String, ByVal idreversion As Integer, ByVal fechaAbono As String, ByVal consecutivo As Integer, ByVal idTurno As Integer, ByVal valor As String, ByVal cedulaEmpleado As String) As String
            Dim results() As Object = Me.Invoke("ReversarVenta", New Object() {codestacion, idreversion, fechaAbono, consecutivo, idTurno, valor, cedulaEmpleado})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReversarVentaAsync(ByVal codestacion As String, ByVal idreversion As Integer, ByVal fechaAbono As String, ByVal consecutivo As Integer, ByVal idTurno As Integer, ByVal valor As String, ByVal cedulaEmpleado As String)
            Me.ReversarVentaAsync(codestacion, idreversion, fechaAbono, consecutivo, idTurno, valor, cedulaEmpleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReversarVentaAsync(ByVal codestacion As String, ByVal idreversion As Integer, ByVal fechaAbono As String, ByVal consecutivo As Integer, ByVal idTurno As Integer, ByVal valor As String, ByVal cedulaEmpleado As String, ByVal userState As Object)
            If (Me.ReversarVentaOperationCompleted Is Nothing) Then
                Me.ReversarVentaOperationCompleted = AddressOf Me.OnReversarVentaOperationCompleted
            End If
            Me.InvokeAsync("ReversarVenta", New Object() {codestacion, idreversion, fechaAbono, consecutivo, idTurno, valor, cedulaEmpleado}, Me.ReversarVentaOperationCompleted, userState)
        End Sub
        
        Private Sub OnReversarVentaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReversarVentaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReversarVentaCompleted(Me, New ReversarVentaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegistrarPagoExtraordinario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistrarPagoExtraordinario(ByVal fechaPago As String, ByVal idTurno As Integer, ByVal placa As String, ByVal valor As String, ByVal codEstacion As String, ByVal idPago As Integer, ByVal cedulaEmpleado As String) As String
            Dim results() As Object = Me.Invoke("RegistrarPagoExtraordinario", New Object() {fechaPago, idTurno, placa, valor, codEstacion, idPago, cedulaEmpleado})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistrarPagoExtraordinarioAsync(ByVal fechaPago As String, ByVal idTurno As Integer, ByVal placa As String, ByVal valor As String, ByVal codEstacion As String, ByVal idPago As Integer, ByVal cedulaEmpleado As String)
            Me.RegistrarPagoExtraordinarioAsync(fechaPago, idTurno, placa, valor, codEstacion, idPago, cedulaEmpleado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistrarPagoExtraordinarioAsync(ByVal fechaPago As String, ByVal idTurno As Integer, ByVal placa As String, ByVal valor As String, ByVal codEstacion As String, ByVal idPago As Integer, ByVal cedulaEmpleado As String, ByVal userState As Object)
            If (Me.RegistrarPagoExtraordinarioOperationCompleted Is Nothing) Then
                Me.RegistrarPagoExtraordinarioOperationCompleted = AddressOf Me.OnRegistrarPagoExtraordinarioOperationCompleted
            End If
            Me.InvokeAsync("RegistrarPagoExtraordinario", New Object() {fechaPago, idTurno, placa, valor, codEstacion, idPago, cedulaEmpleado}, Me.RegistrarPagoExtraordinarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistrarPagoExtraordinarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistrarPagoExtraordinarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistrarPagoExtraordinarioCompleted(Me, New RegistrarPagoExtraordinarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutorizacionIdentificador", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutorizacionIdentificador(ByVal identificador As String, ByVal placa As String, ByVal fechaProximoMantenimiento As Date) As ResponseAutorizarIdentificador
            Dim results() As Object = Me.Invoke("AutorizacionIdentificador", New Object() {identificador, placa, fechaProximoMantenimiento})
            Return CType(results(0),ResponseAutorizarIdentificador)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutorizacionIdentificadorAsync(ByVal identificador As String, ByVal placa As String, ByVal fechaProximoMantenimiento As Date)
            Me.AutorizacionIdentificadorAsync(identificador, placa, fechaProximoMantenimiento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutorizacionIdentificadorAsync(ByVal identificador As String, ByVal placa As String, ByVal fechaProximoMantenimiento As Date, ByVal userState As Object)
            If (Me.AutorizacionIdentificadorOperationCompleted Is Nothing) Then
                Me.AutorizacionIdentificadorOperationCompleted = AddressOf Me.OnAutorizacionIdentificadorOperationCompleted
            End If
            Me.InvokeAsync("AutorizacionIdentificador", New Object() {identificador, placa, fechaProximoMantenimiento}, Me.AutorizacionIdentificadorOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutorizacionIdentificadorOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutorizacionIdentificadorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutorizacionIdentificadorCompleted(Me, New AutorizacionIdentificadorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CreditosVenta
        
        Private idCreditoField As Long
        
        Private valorField As Decimal
        
        Private porcentajeField As Decimal
        
        Private reciboField As Long
        
        Private codEstacionField As String
        
        '''<remarks/>
        Public Property IdCredito() As Long
            Get
                Return Me.idCreditoField
            End Get
            Set
                Me.idCreditoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Valor() As Decimal
            Get
                Return Me.valorField
            End Get
            Set
                Me.valorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Porcentaje() As Decimal
            Get
                Return Me.porcentajeField
            End Get
            Set
                Me.porcentajeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Recibo() As Long
            Get
                Return Me.reciboField
            End Get
            Set
                Me.reciboField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodEstacion() As String
            Get
                Return Me.codEstacionField
            End Get
            Set
                Me.codEstacionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class ResponseAutorizarIdentificador
        
        Private autorizadoField As Boolean
        
        Private respuestaField As String
        
        '''<remarks/>
        Public Property Autorizado() As Boolean
            Get
                Return Me.autorizadoField
            End Get
            Set
                Me.autorizadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Respuesta() As String
            Get
                Return Me.respuestaField
            End Get
            Set
                Me.respuestaField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RegistrarVentaCompletedEventHandler(ByVal sender As Object, ByVal e As RegistrarVentaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistrarVentaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RegistrarCreditosVentaCompletedEventHandler(ByVal sender As Object, ByVal e As RegistrarCreditosVentaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistrarCreditosVentaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RegistrarLecturaCompletedEventHandler(ByVal sender As Object, ByVal e As RegistrarLecturaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistrarLecturaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ReversarVentaCompletedEventHandler(ByVal sender As Object, ByVal e As ReversarVentaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReversarVentaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RegistrarPagoExtraordinarioCompletedEventHandler(ByVal sender As Object, ByVal e As RegistrarPagoExtraordinarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistrarPagoExtraordinarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AutorizacionIdentificadorCompletedEventHandler(ByVal sender As Object, ByVal e As AutorizacionIdentificadorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutorizacionIdentificadorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResponseAutorizarIdentificador
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResponseAutorizarIdentificador)
            End Get
        End Property
    End Class
End Namespace
