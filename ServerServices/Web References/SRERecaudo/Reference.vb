'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18034
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18034.
'
Namespace SRERecaudo
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SRERecaudoSoap", [Namespace]:="POSstation.Servicios")>  _
    Partial Public Class SRERecaudo
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ConsultarConceptosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InformarPagoNoRealizadoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistrarRecaudoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.POSstation.ServerServices.My.MySettings.Default.ServerServices_SRERecaudo_SRERecaudo
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ConsultarConceptosCompleted As ConsultarConceptosCompletedEventHandler
        
        '''<remarks/>
        Public Event InformarPagoNoRealizadoCompleted As InformarPagoNoRealizadoCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistrarRecaudoCompleted As RegistrarRecaudoCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("POSstation.Servicios/ConsultarConceptos", RequestNamespace:="POSstation.Servicios", ResponseNamespace:="POSstation.Servicios", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarConceptos(ByVal Placa As String, ByVal Movil As Integer) As RespuestaConsultaConceptoEmpresa()
            Dim results() As Object = Me.Invoke("ConsultarConceptos", New Object() {Placa, Movil})
            Return CType(results(0),RespuestaConsultaConceptoEmpresa())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarConceptosAsync(ByVal Placa As String, ByVal Movil As Integer)
            Me.ConsultarConceptosAsync(Placa, Movil, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarConceptosAsync(ByVal Placa As String, ByVal Movil As Integer, ByVal userState As Object)
            If (Me.ConsultarConceptosOperationCompleted Is Nothing) Then
                Me.ConsultarConceptosOperationCompleted = AddressOf Me.OnConsultarConceptosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarConceptos", New Object() {Placa, Movil}, Me.ConsultarConceptosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarConceptosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarConceptosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarConceptosCompleted(Me, New ConsultarConceptosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("POSstation.Servicios/InformarPagoNoRealizado", RequestNamespace:="POSstation.Servicios", ResponseNamespace:="POSstation.Servicios", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub InformarPagoNoRealizado(ByVal Placa As String, ByVal Movil As Integer, ByVal IdRecaudoEstacion As Integer, ByVal Valor As Decimal, ByVal Fecha As Date, ByVal CodEstacion As String)
            Me.Invoke("InformarPagoNoRealizado", New Object() {Placa, Movil, IdRecaudoEstacion, Valor, Fecha, CodEstacion})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InformarPagoNoRealizadoAsync(ByVal Placa As String, ByVal Movil As Integer, ByVal IdRecaudoEstacion As Integer, ByVal Valor As Decimal, ByVal Fecha As Date, ByVal CodEstacion As String)
            Me.InformarPagoNoRealizadoAsync(Placa, Movil, IdRecaudoEstacion, Valor, Fecha, CodEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InformarPagoNoRealizadoAsync(ByVal Placa As String, ByVal Movil As Integer, ByVal IdRecaudoEstacion As Integer, ByVal Valor As Decimal, ByVal Fecha As Date, ByVal CodEstacion As String, ByVal userState As Object)
            If (Me.InformarPagoNoRealizadoOperationCompleted Is Nothing) Then
                Me.InformarPagoNoRealizadoOperationCompleted = AddressOf Me.OnInformarPagoNoRealizadoOperationCompleted
            End If
            Me.InvokeAsync("InformarPagoNoRealizado", New Object() {Placa, Movil, IdRecaudoEstacion, Valor, Fecha, CodEstacion}, Me.InformarPagoNoRealizadoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInformarPagoNoRealizadoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InformarPagoNoRealizadoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InformarPagoNoRealizadoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("POSstation.Servicios/RegistrarRecaudo", RequestNamespace:="POSstation.Servicios", ResponseNamespace:="POSstation.Servicios", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistrarRecaudo(ByVal Placa As String, ByVal Movil As Integer, ByVal IdRecaudoEstacion As Integer, ByVal IdConcepto As Integer, ByVal CantidadPeriodos As Integer, ByVal Valor As Decimal, ByVal CodEstacion As String) As RespuestaServicioRecaudo
            Dim results() As Object = Me.Invoke("RegistrarRecaudo", New Object() {Placa, Movil, IdRecaudoEstacion, IdConcepto, CantidadPeriodos, Valor, CodEstacion})
            Return CType(results(0),RespuestaServicioRecaudo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistrarRecaudoAsync(ByVal Placa As String, ByVal Movil As Integer, ByVal IdRecaudoEstacion As Integer, ByVal IdConcepto As Integer, ByVal CantidadPeriodos As Integer, ByVal Valor As Decimal, ByVal CodEstacion As String)
            Me.RegistrarRecaudoAsync(Placa, Movil, IdRecaudoEstacion, IdConcepto, CantidadPeriodos, Valor, CodEstacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistrarRecaudoAsync(ByVal Placa As String, ByVal Movil As Integer, ByVal IdRecaudoEstacion As Integer, ByVal IdConcepto As Integer, ByVal CantidadPeriodos As Integer, ByVal Valor As Decimal, ByVal CodEstacion As String, ByVal userState As Object)
            If (Me.RegistrarRecaudoOperationCompleted Is Nothing) Then
                Me.RegistrarRecaudoOperationCompleted = AddressOf Me.OnRegistrarRecaudoOperationCompleted
            End If
            Me.InvokeAsync("RegistrarRecaudo", New Object() {Placa, Movil, IdRecaudoEstacion, IdConcepto, CantidadPeriodos, Valor, CodEstacion}, Me.RegistrarRecaudoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistrarRecaudoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistrarRecaudoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistrarRecaudoCompleted(Me, New RegistrarRecaudoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="POSstation.Servicios")>  _
    Partial Public Class RespuestaConsultaConceptoEmpresa
        
        Private descPeriodosField As String
        
        Private descripcionField As String
        
        Private fechaFinalField As Date
        
        Private fechaInicialField As Date
        
        Private idMovilField As Integer
        
        Private periodoField As Integer
        
        Private periodosField As Integer
        
        Private saldoField As Decimal
        
        Private idConceptoField As Integer
        
        '''<remarks/>
        Public Property DescPeriodos() As String
            Get
                Return Me.descPeriodosField
            End Get
            Set
                Me.descPeriodosField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaFinal() As Date
            Get
                Return Me.fechaFinalField
            End Get
            Set
                Me.fechaFinalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FechaInicial() As Date
            Get
                Return Me.fechaInicialField
            End Get
            Set
                Me.fechaInicialField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdMovil() As Integer
            Get
                Return Me.idMovilField
            End Get
            Set
                Me.idMovilField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Periodo() As Integer
            Get
                Return Me.periodoField
            End Get
            Set
                Me.periodoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Periodos() As Integer
            Get
                Return Me.periodosField
            End Get
            Set
                Me.periodosField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Saldo() As Decimal
            Get
                Return Me.saldoField
            End Get
            Set
                Me.saldoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdConcepto() As Integer
            Get
                Return Me.idConceptoField
            End Get
            Set
                Me.idConceptoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="POSstation.Servicios")>  _
    Partial Public Class RespuestaServicioRecaudo
        
        Private descripcionField As String
        
        Private mensajeField As String
        
        Private idRecaudoEmpresaField As Integer
        
        Private periodosField As Integer
        
        Private esProcesadoField As Boolean
        
        Private valorField As Decimal
        
        Private fechaField As String
        
        '''<remarks/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mensaje() As String
            Get
                Return Me.mensajeField
            End Get
            Set
                Me.mensajeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IdRecaudoEmpresa() As Integer
            Get
                Return Me.idRecaudoEmpresaField
            End Get
            Set
                Me.idRecaudoEmpresaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Periodos() As Integer
            Get
                Return Me.periodosField
            End Get
            Set
                Me.periodosField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EsProcesado() As Boolean
            Get
                Return Me.esProcesadoField
            End Get
            Set
                Me.esProcesadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Valor() As Decimal
            Get
                Return Me.valorField
            End Get
            Set
                Me.valorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Fecha() As String
            Get
                Return Me.fechaField
            End Get
            Set
                Me.fechaField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ConsultarConceptosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarConceptosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarConceptosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RespuestaConsultaConceptoEmpresa()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RespuestaConsultaConceptoEmpresa())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub InformarPagoNoRealizadoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RegistrarRecaudoCompletedEventHandler(ByVal sender As Object, ByVal e As RegistrarRecaudoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistrarRecaudoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RespuestaServicioRecaudo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RespuestaServicioRecaudo)
            End Get
        End Property
    End Class
End Namespace
