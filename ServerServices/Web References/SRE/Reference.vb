'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18034
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18034.
'
Namespace SRE
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="RecaudoSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Recaudo
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private InsertarRecaudoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertarConsolidadoDiarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidarDatosRecaudoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.POSstation.ServerServices.My.MySettings.Default.ServerServices_SRE_Recaudo
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event InsertarRecaudoCompleted As InsertarRecaudoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertarConsolidadoDiarioCompleted As InsertarConsolidadoDiarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidarDatosRecaudoCompleted As ValidarDatosRecaudoCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertarRecaudo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarRecaudo(ByVal IdTipo As Integer, ByVal Placa As String, ByVal Conductor As String, ByVal Estacion As String, ByVal Valor As Decimal, ByVal Fecha As Date, ByVal IdEmpresa As Integer, ByVal Movil As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("InsertarRecaudo", New Object() {IdTipo, Placa, Conductor, Estacion, Valor, Fecha, IdEmpresa, Movil})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarRecaudoAsync(ByVal IdTipo As Integer, ByVal Placa As String, ByVal Conductor As String, ByVal Estacion As String, ByVal Valor As Decimal, ByVal Fecha As Date, ByVal IdEmpresa As Integer, ByVal Movil As Integer)
            Me.InsertarRecaudoAsync(IdTipo, Placa, Conductor, Estacion, Valor, Fecha, IdEmpresa, Movil, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarRecaudoAsync(ByVal IdTipo As Integer, ByVal Placa As String, ByVal Conductor As String, ByVal Estacion As String, ByVal Valor As Decimal, ByVal Fecha As Date, ByVal IdEmpresa As Integer, ByVal Movil As Integer, ByVal userState As Object)
            If (Me.InsertarRecaudoOperationCompleted Is Nothing) Then
                Me.InsertarRecaudoOperationCompleted = AddressOf Me.OnInsertarRecaudoOperationCompleted
            End If
            Me.InvokeAsync("InsertarRecaudo", New Object() {IdTipo, Placa, Conductor, Estacion, Valor, Fecha, IdEmpresa, Movil}, Me.InsertarRecaudoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarRecaudoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarRecaudoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarRecaudoCompleted(Me, New InsertarRecaudoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertarConsolidadoDiario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertarConsolidadoDiario(ByVal oDs As System.Data.DataSet) As String
            Dim results() As Object = Me.Invoke("InsertarConsolidadoDiario", New Object() {oDs})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertarConsolidadoDiarioAsync(ByVal oDs As System.Data.DataSet)
            Me.InsertarConsolidadoDiarioAsync(oDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertarConsolidadoDiarioAsync(ByVal oDs As System.Data.DataSet, ByVal userState As Object)
            If (Me.InsertarConsolidadoDiarioOperationCompleted Is Nothing) Then
                Me.InsertarConsolidadoDiarioOperationCompleted = AddressOf Me.OnInsertarConsolidadoDiarioOperationCompleted
            End If
            Me.InvokeAsync("InsertarConsolidadoDiario", New Object() {oDs}, Me.InsertarConsolidadoDiarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertarConsolidadoDiarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertarConsolidadoDiarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertarConsolidadoDiarioCompleted(Me, New InsertarConsolidadoDiarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarDatosRecaudo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidarDatosRecaudo(ByVal idEmpresa As Integer, ByVal RUC As String, ByVal placa As String) As RespuestaSRE
            Dim results() As Object = Me.Invoke("ValidarDatosRecaudo", New Object() {idEmpresa, RUC, placa})
            Return CType(results(0),RespuestaSRE)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidarDatosRecaudoAsync(ByVal idEmpresa As Integer, ByVal RUC As String, ByVal placa As String)
            Me.ValidarDatosRecaudoAsync(idEmpresa, RUC, placa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidarDatosRecaudoAsync(ByVal idEmpresa As Integer, ByVal RUC As String, ByVal placa As String, ByVal userState As Object)
            If (Me.ValidarDatosRecaudoOperationCompleted Is Nothing) Then
                Me.ValidarDatosRecaudoOperationCompleted = AddressOf Me.OnValidarDatosRecaudoOperationCompleted
            End If
            Me.InvokeAsync("ValidarDatosRecaudo", New Object() {idEmpresa, RUC, placa}, Me.ValidarDatosRecaudoOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidarDatosRecaudoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidarDatosRecaudoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidarDatosRecaudoCompleted(Me, New ValidarDatosRecaudoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18034"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class RespuestaSRE
        
        Private autorizadoField As Boolean
        
        Private mensajeErrorField As String
        
        '''<remarks/>
        Public Property Autorizado() As Boolean
            Get
                Return Me.autorizadoField
            End Get
            Set
                Me.autorizadoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MensajeError() As String
            Get
                Return Me.mensajeErrorField
            End Get
            Set
                Me.mensajeErrorField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub InsertarRecaudoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarRecaudoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarRecaudoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub InsertarConsolidadoDiarioCompletedEventHandler(ByVal sender As Object, ByVal e As InsertarConsolidadoDiarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertarConsolidadoDiarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ValidarDatosRecaudoCompletedEventHandler(ByVal sender As Object, ByVal e As ValidarDatosRecaudoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidarDatosRecaudoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As RespuestaSRE
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),RespuestaSRE)
            End Get
        End Property
    End Class
End Namespace
