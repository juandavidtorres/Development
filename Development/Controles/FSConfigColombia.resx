<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnBono.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAAeCAYAAABwmH1PAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA0RJREFUWEftmP9rTlEcx/0dRH5RSvxAipQov0gpRZHyJWIiJUKUKFGSbGg27Ist
        C2tr3232xZiNmWWzzMZs2IzZmD33+7e3c+7O3X323GeeL/detS+vOt1z7vM85/m873mfz/l0Z2GaMSN4
        qjMjeCpgaAr0QD8MhWd3bCaFYEPmoA/3QOtvhvqpAkpbDuRX1yE9PQex/DCEwt0Q8rZByCeNXgt2gM9Z
        D7Wnhs1g8/8FGzoMYQj6UCe03gaoH4qhtGRCfnEFUs1piKUJ44PP3w6xJAFS1UnI9ZegvEmD0lEA7Usd
        9J/tMPgBMqU6+lDIqlqonUVQ2nPZyMa1YMs++kAb1M+15E/yIDenQn5+EWLlsbBPX6w4AunZechNyURA
        utm0vkbov7pgSMMR5xSL90LI3Qw+ay241CUIJM5F4OpscOkrWVSA9rUe8usUNrJxLZi7s3zs6dM/oE1p
        Hr2ajYiKJVAKvRdP41IWsxkAfbADcsNlNrJxLVgs2cd63gRKoWPzs6R54G4tBZ+9jrhjq9Pa7/OhdldD
        +94C/U8vDFVkMxDnCYOQqk+xkY2ngr0IlGLeI9Z2S3BsFp4K9irQCYmY8A5AqrvAvkxj2896Np4KjpXQ
        5KSS7OvI2GH2/L8af3cNm92vFX58lBwJI2Y/mozN398IPmMVAskLwwbstgXnA19WmFpI/91t9gPX5ocN
        wnW7sQBc2gpSTGxwHmvvHkyYD3xZYXr0aN+azD53e1n4gMe1OeBuLgKfuRrCw00QyFEVqagYw7GHSx1V
        l1h1gn2ZLAbJ0jRbB+NaMK1m1K5ysy9WHodYdhDSkzOQXyZCeZtNKp7iCQX4sYeDLU3PYct9Fq4F03pV
        abtn9n3bw3FaWmnJGHOfhWvB2o9WyI1JZj+6PezC0pQItpbIw7Wg9bTlPgvXgvWRPki1Z80+zYoOS38s
        G1cnh+K1rYMtTetpy30WrgXTI0l8dIiNfLJ1nJY262nmPgvXgilC4S7Wi8bWLi0dA8Hus/BcMA0+FkvH
        SsSXAUV7zHjEwp3mVWnNYr8cxXPBsRDV/g19GRDDsRcOTwXH8yrGsR89dkQongimAQu5W3zdj17hieDJ
        xIzgqc40Ewz8Bd1DIYqoP51EAAAAAElFTkSuQmCC
</value>
  </data>
</root>